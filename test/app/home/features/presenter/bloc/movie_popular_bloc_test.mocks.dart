// Mocks generated by Mockito 5.2.0 from annotations
// in show_movie_app/test/app/home/features/presenter/bloc/movie_popular_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:show_movie_app/app/core/error/failures.dart' as _i6;
import 'package:show_movie_app/app/core/usecases/usecase.dart' as _i8;
import 'package:show_movie_app/app/domain/entities/movie_entity.dart' as _i7;
import 'package:show_movie_app/app/domain/repositories/movie_repository.dart'
    as _i2;
import 'package:show_movie_app/app/domain/usecases/get_movie_popular_usecase.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeMovieRepository_0 extends _i1.Fake implements _i2.MovieRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetMoviePopularUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMoviePopularUsecase extends _i1.Mock
    implements _i4.GetMoviePopularUsecase {
  MockGetMoviePopularUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_0()) as _i2.MovieRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.MovieEntity>>> call(
          _i8.NoParams? noParams) =>
      (super.noSuchMethod(Invocation.method(#call, [noParams]),
              returnValue:
                  Future<_i3.Either<_i6.Failure, List<_i7.MovieEntity>>>.value(
                      _FakeEither_1<_i6.Failure, List<_i7.MovieEntity>>()))
          as _i5.Future<_i3.Either<_i6.Failure, List<_i7.MovieEntity>>>);
}
